"""Initial schema

Revision ID: 851bd474194e
Revises: 
Create Date: 2025-05-07 11:47:07.238310

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '851bd474194e'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('privileges',
    sa.Column('id', sa.Integer(), primary_key=True, autoincrement=True, nullable=False),
    sa.Column('key', sa.String(length=50), unique=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    )
    op.create_table('roles',
    sa.Column('id', sa.Integer(), primary_key=True, autoincrement=True, nullable=False),
    sa.Column('key', sa.String(length=50), unique=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    )
    op.create_table('role_privileges',
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('privilege_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['privilege_id'], ['privileges.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('role_id', 'privilege_id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), primary_key=True, autoincrement=True, nullable=False),
    sa.Column('username', sa.String(length=255), unique=True, nullable=False),
    sa.Column('email', sa.String(length=255), unique=True, nullable=False, comment='Valid Email'),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    )
    op.create_table('orders',
    sa.Column('id', sa.Integer(), primary_key=True, autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('order_date', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('total_amount', sa.Numeric(precision=10, scale=2), nullable=False, comment='>=0'),
    sa.Column('status', sa.Enum('pending', 'in_progress', 'delivered', 'cancelled', name='statuses'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('orders')
    op.drop_table('users')
    op.drop_table('role_privileges')
    op.drop_table('roles')
    op.drop_table('privileges')
    # ### end Alembic commands ###
